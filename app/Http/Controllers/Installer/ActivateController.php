<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2022-09-30 06:29:58              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer; use Exception; use Illuminate\Http\Request; use Illuminate\Routing\Controller; use Illuminate\Support\Facades\DB; class ActivateController extends Controller { public function activate() { if ($this->checkDatabaseConnection()) { goto JZHvN; } return redirect()->back()->withErrors(["\144\x61\x74\141\142\x61\x73\145\x5f\143\x6f\x6e\156\145\143\164\x69\157\156" => trans("\x69\156\163\x74\x61\154\x6c\x65\162\137\x6d\145\x73\x73\141\x67\145\163\x2e\x65\x6e\166\151\162\157\156\x6d\x65\156\164\x2e\x77\x69\x7a\141\x72\144\x2e\x66\157\162\x6d\56\144\x62\x5f\x63\x6f\x6e\156\x65\143\164\x69\157\156\137\x66\141\151\x6c\x65\x64")]); JZHvN: return view("\x69\156\163\164\x61\154\x6c\145\162\56\141\x63\x74\151\166\x61\x74\x65"); } public function verify(Request $request) { $mysqli_connection = getMysqliConnection(); if ($mysqli_connection) { goto e1iI3; } return redirect()->route("\111\x6e\163\x74\x61\154\x6c\x65\162\56\141\x63\x74\x69\x76\141\164\x65")->with(["\146\141\151\154\145\144" => trans("\x72\x65\x73\x70\x6f\x6e\163\145\163\x2e\144\141\x74\141\x62\x61\x73\145\x5f\143\x6f\x6e\156\145\143\x74\x69\x6f\x6e\137\x66\141\151\x6c\x65\144")])->withInput($request->all()); e1iI3: $purchase_verification = aplVerifyEnvatoPurchase($request->purchase_code); if (empty($purchase_verification)) { goto N0v9D; } return redirect()->route("\x49\x6e\x73\164\141\154\x6c\145\x72\56\141\x63\x74\x69\x76\141\x74\x65")->with(["\146\141\151\x6c\x65\x64" => "\103\157\156\156\145\143\164\151\x6f\156" . "\x20\164\x6f\40\162\x65\155\x6f\x74\145\40" . "\163\145\x72\166\145\162\x20\143\x61\x6e\47\x74\x20\142\x65" . "\40\145\163\x74\x61\x62\x6c\151\163\150\x65\x64"])->withInput($request->all()); N0v9D: $license_notifications_array = incevioVerify($request->root_url, $request->email_address, $request->purchase_code, $mysqli_connection); if (!($license_notifications_array["\x6e\x6f\164\x69\x66\151\x63\x61\x74\151\x6f\x6e\137\143\141\163\145"] == "\x6e\x6f\x74\151\x66\151\143\x61\164\151\x6f\156\x5f\x6c\x69\143\145\156\163\145\137\x6f\x6b")) { goto FQOQ_; } return view("\x69\x6e\x73\164\141\154\x6c\x65\162\56\151\156\163\164\x61\x6c\154", compact("\x6c\151\143\145\156\x73\x65\137\156\157\x74\x69\x66\151\x63\x61\164\151\x6f\156\x73\137\141\162\x72\x61\x79")); FQOQ_: if (!($license_notifications_array["\156\x6f\x74\151\x66\x69\143\x61\164\151\157\x6e\x5f\x63\x61\x73\x65"] == "\x6e\157\x74\151\146\151\x63\x61\x74\151\157\156\x5f\x61\154\162\x65\x61\144\x79\137\x69\156\163\x74\141\x6c\154\145\x64")) { goto SGWQM; } $license_notifications_array = incevioAutoloadHelpers($mysqli_connection, 1); if (!($license_notifications_array["\156\x6f\164\x69\x66\151\143\141\164\x69\x6f\156\137\x63\141\163\x65"] == "\156\157\164\x69\x66\151\143\x61\x74\151\157\x6e\137\x6c\151\143\x65\156\163\145\x5f\157\x6b")) { goto vveeX; } return view("\x69\156\x73\164\141\154\x6c\145\162\x2e\x69\156\163\164\x61\x6c\x6c", compact("\x6c\x69\143\x65\156\163\x65\137\x6e\157\x74\x69\146\x69\143\141\x74\151\x6f\x6e\163\137\x61\162\x72\141\171")); vveeX: SGWQM: return redirect()->route("\x49\156\x73\x74\x61\x6c\154\x65\x72\x2e\x61\143\x74\151\166\x61\164\145")->with(["\x66\x61\x69\154\x65\144" => $license_notifications_array["\x6e\x6f\164\151\146\x69\143\x61\164\x69\x6f\x6e\137\164\145\170\164"]])->withInput($request->all()); } private function checkDatabaseConnection() { try { DB::connection()->getPdo(); return true; } catch (Exception $e) { return false; } } private function response($message, $status = "\144\x61\156\147\145\x72") { return ["\x73\164\141\164\165\x73" => $status, "\155\145\163\x73\x61\147\x65" => $message]; } }
